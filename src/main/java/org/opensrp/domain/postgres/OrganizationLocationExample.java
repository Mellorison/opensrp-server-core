package org.opensrp.domain.postgres;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class OrganizationLocationExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table team.organization_location
	 * @mbg.generated  Mon Sep 09 18:07:17 EAT 2019
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table team.organization_location
	 * @mbg.generated  Mon Sep 09 18:07:17 EAT 2019
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table team.organization_location
	 * @mbg.generated  Mon Sep 09 18:07:17 EAT 2019
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table team.organization_location
	 * @mbg.generated  Mon Sep 09 18:07:17 EAT 2019
	 */
	public OrganizationLocationExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table team.organization_location
	 * @mbg.generated  Mon Sep 09 18:07:17 EAT 2019
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table team.organization_location
	 * @mbg.generated  Mon Sep 09 18:07:17 EAT 2019
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table team.organization_location
	 * @mbg.generated  Mon Sep 09 18:07:17 EAT 2019
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table team.organization_location
	 * @mbg.generated  Mon Sep 09 18:07:17 EAT 2019
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table team.organization_location
	 * @mbg.generated  Mon Sep 09 18:07:17 EAT 2019
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table team.organization_location
	 * @mbg.generated  Mon Sep 09 18:07:17 EAT 2019
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table team.organization_location
	 * @mbg.generated  Mon Sep 09 18:07:17 EAT 2019
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table team.organization_location
	 * @mbg.generated  Mon Sep 09 18:07:17 EAT 2019
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table team.organization_location
	 * @mbg.generated  Mon Sep 09 18:07:17 EAT 2019
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table team.organization_location
	 * @mbg.generated  Mon Sep 09 18:07:17 EAT 2019
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table team.organization_location
	 * @mbg.generated  Mon Sep 09 18:07:17 EAT 2019
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new IllegalArgumentException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new IllegalArgumentException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new IllegalArgumentException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(Long value) {
			addCriterion("id =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(Long value) {
			addCriterion("id <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(Long value) {
			addCriterion("id >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Long value) {
			addCriterion("id >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(Long value) {
			addCriterion("id <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(Long value) {
			addCriterion("id <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<Long> values) {
			addCriterion("id in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<Long> values) {
			addCriterion("id not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(Long value1, Long value2) {
			addCriterion("id between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(Long value1, Long value2) {
			addCriterion("id not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andOrganizationIdIsNull() {
			addCriterion("organization_id is null");
			return (Criteria) this;
		}

		public Criteria andOrganizationIdIsNotNull() {
			addCriterion("organization_id is not null");
			return (Criteria) this;
		}

		public Criteria andOrganizationIdEqualTo(Long value) {
			addCriterion("organization_id =", value, "organizationId");
			return (Criteria) this;
		}

		public Criteria andOrganizationIdNotEqualTo(Long value) {
			addCriterion("organization_id <>", value, "organizationId");
			return (Criteria) this;
		}

		public Criteria andOrganizationIdGreaterThan(Long value) {
			addCriterion("organization_id >", value, "organizationId");
			return (Criteria) this;
		}

		public Criteria andOrganizationIdGreaterThanOrEqualTo(Long value) {
			addCriterion("organization_id >=", value, "organizationId");
			return (Criteria) this;
		}

		public Criteria andOrganizationIdLessThan(Long value) {
			addCriterion("organization_id <", value, "organizationId");
			return (Criteria) this;
		}

		public Criteria andOrganizationIdLessThanOrEqualTo(Long value) {
			addCriterion("organization_id <=", value, "organizationId");
			return (Criteria) this;
		}

		public Criteria andOrganizationIdIn(List<Long> values) {
			addCriterion("organization_id in", values, "organizationId");
			return (Criteria) this;
		}

		public Criteria andOrganizationIdNotIn(List<Long> values) {
			addCriterion("organization_id not in", values, "organizationId");
			return (Criteria) this;
		}

		public Criteria andOrganizationIdBetween(Long value1, Long value2) {
			addCriterion("organization_id between", value1, value2, "organizationId");
			return (Criteria) this;
		}

		public Criteria andOrganizationIdNotBetween(Long value1, Long value2) {
			addCriterion("organization_id not between", value1, value2, "organizationId");
			return (Criteria) this;
		}

		public Criteria andLocationIdIsNull() {
			addCriterion("location_id is null");
			return (Criteria) this;
		}

		public Criteria andLocationIdIsNotNull() {
			addCriterion("location_id is not null");
			return (Criteria) this;
		}

		public Criteria andLocationIdEqualTo(Long value) {
			addCriterion("location_id =", value, "locationId");
			return (Criteria) this;
		}

		public Criteria andLocationIdNotEqualTo(Long value) {
			addCriterion("location_id <>", value, "locationId");
			return (Criteria) this;
		}

		public Criteria andLocationIdGreaterThan(Long value) {
			addCriterion("location_id >", value, "locationId");
			return (Criteria) this;
		}

		public Criteria andLocationIdGreaterThanOrEqualTo(Long value) {
			addCriterion("location_id >=", value, "locationId");
			return (Criteria) this;
		}

		public Criteria andLocationIdLessThan(Long value) {
			addCriterion("location_id <", value, "locationId");
			return (Criteria) this;
		}

		public Criteria andLocationIdLessThanOrEqualTo(Long value) {
			addCriterion("location_id <=", value, "locationId");
			return (Criteria) this;
		}

		public Criteria andLocationIdIn(List<Long> values) {
			addCriterion("location_id in", values, "locationId");
			return (Criteria) this;
		}

		public Criteria andLocationIdNotIn(List<Long> values) {
			addCriterion("location_id not in", values, "locationId");
			return (Criteria) this;
		}

		public Criteria andLocationIdBetween(Long value1, Long value2) {
			addCriterion("location_id between", value1, value2, "locationId");
			return (Criteria) this;
		}

		public Criteria andLocationIdNotBetween(Long value1, Long value2) {
			addCriterion("location_id not between", value1, value2, "locationId");
			return (Criteria) this;
		}

		public Criteria andPlanIdIsNull() {
			addCriterion("plan_id is null");
			return (Criteria) this;
		}

		public Criteria andPlanIdIsNotNull() {
			addCriterion("plan_id is not null");
			return (Criteria) this;
		}

		public Criteria andPlanIdEqualTo(Long value) {
			addCriterion("plan_id =", value, "planId");
			return (Criteria) this;
		}

		public Criteria andPlanIdNotEqualTo(Long value) {
			addCriterion("plan_id <>", value, "planId");
			return (Criteria) this;
		}

		public Criteria andPlanIdGreaterThan(Long value) {
			addCriterion("plan_id >", value, "planId");
			return (Criteria) this;
		}

		public Criteria andPlanIdGreaterThanOrEqualTo(Long value) {
			addCriterion("plan_id >=", value, "planId");
			return (Criteria) this;
		}

		public Criteria andPlanIdLessThan(Long value) {
			addCriterion("plan_id <", value, "planId");
			return (Criteria) this;
		}

		public Criteria andPlanIdLessThanOrEqualTo(Long value) {
			addCriterion("plan_id <=", value, "planId");
			return (Criteria) this;
		}

		public Criteria andPlanIdIn(List<Long> values) {
			addCriterion("plan_id in", values, "planId");
			return (Criteria) this;
		}

		public Criteria andPlanIdNotIn(List<Long> values) {
			addCriterion("plan_id not in", values, "planId");
			return (Criteria) this;
		}

		public Criteria andPlanIdBetween(Long value1, Long value2) {
			addCriterion("plan_id between", value1, value2, "planId");
			return (Criteria) this;
		}

		public Criteria andPlanIdNotBetween(Long value1, Long value2) {
			addCriterion("plan_id not between", value1, value2, "planId");
			return (Criteria) this;
		}

		public Criteria andFromDateIsNull() {
			addCriterion("from_date is null");
			return (Criteria) this;
		}

		public Criteria andFromDateIsNotNull() {
			addCriterion("from_date is not null");
			return (Criteria) this;
		}

		public Criteria andFromDateEqualTo(Date value) {
			addCriterion("from_date =", value, "fromDate");
			return (Criteria) this;
		}

		public Criteria andFromDateNotEqualTo(Date value) {
			addCriterion("from_date <>", value, "fromDate");
			return (Criteria) this;
		}

		public Criteria andFromDateGreaterThan(Date value) {
			addCriterion("from_date >", value, "fromDate");
			return (Criteria) this;
		}

		public Criteria andFromDateGreaterThanOrEqualTo(Date value) {
			addCriterion("from_date >=", value, "fromDate");
			return (Criteria) this;
		}

		public Criteria andFromDateLessThan(Date value) {
			addCriterion("from_date <", value, "fromDate");
			return (Criteria) this;
		}

		public Criteria andFromDateLessThanOrEqualTo(Date value) {
			addCriterion("from_date <=", value, "fromDate");
			return (Criteria) this;
		}

		public Criteria andFromDateIn(List<Date> values) {
			addCriterion("from_date in", values, "fromDate");
			return (Criteria) this;
		}

		public Criteria andFromDateNotIn(List<Date> values) {
			addCriterion("from_date not in", values, "fromDate");
			return (Criteria) this;
		}

		public Criteria andFromDateBetween(Date value1, Date value2) {
			addCriterion("from_date between", value1, value2, "fromDate");
			return (Criteria) this;
		}

		public Criteria andFromDateNotBetween(Date value1, Date value2) {
			addCriterion("from_date not between", value1, value2, "fromDate");
			return (Criteria) this;
		}

		public Criteria andToDateIsNull() {
			addCriterion("to_date is null");
			return (Criteria) this;
		}

		public Criteria andToDateIsNotNull() {
			addCriterion("to_date is not null");
			return (Criteria) this;
		}

		public Criteria andToDateEqualTo(Date value) {
			addCriterion("to_date =", value, "toDate");
			return (Criteria) this;
		}

		public Criteria andToDateNotEqualTo(Date value) {
			addCriterion("to_date <>", value, "toDate");
			return (Criteria) this;
		}

		public Criteria andToDateGreaterThan(Date value) {
			addCriterion("to_date >", value, "toDate");
			return (Criteria) this;
		}

		public Criteria andToDateGreaterThanOrEqualTo(Date value) {
			addCriterion("to_date >=", value, "toDate");
			return (Criteria) this;
		}

		public Criteria andToDateLessThan(Date value) {
			addCriterion("to_date <", value, "toDate");
			return (Criteria) this;
		}

		public Criteria andToDateLessThanOrEqualTo(Date value) {
			addCriterion("to_date <=", value, "toDate");
			return (Criteria) this;
		}

		public Criteria andToDateIn(List<Date> values) {
			addCriterion("to_date in", values, "toDate");
			return (Criteria) this;
		}

		public Criteria andToDateNotIn(List<Date> values) {
			addCriterion("to_date not in", values, "toDate");
			return (Criteria) this;
		}

		public Criteria andToDateBetween(Date value1, Date value2) {
			addCriterion("to_date between", value1, value2, "toDate");
			return (Criteria) this;
		}

		public Criteria andToDateNotBetween(Date value1, Date value2) {
			addCriterion("to_date not between", value1, value2, "toDate");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table team.organization_location
	 * @mbg.generated  Mon Sep 09 18:07:17 EAT 2019
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table team.organization_location
     *
     * @mbg.generated do_not_delete_during_merge Fri Aug 30 16:08:23 EAT 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}