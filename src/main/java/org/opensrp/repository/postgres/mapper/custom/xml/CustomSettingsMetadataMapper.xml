<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="org.opensrp.repository.postgres.mapper.custom.CustomSettingMetadataMapper">

	<resultMap id="SettingsAndSettingsMetadataMap" type="org.opensrp.domain.postgres.SettingsAndSettingsMetadataJoined">
		<result column="settings_id" jdbcType="BIGINT" property="settings.id" />
		<result column="settings_configuration_json" jdbcType="OTHER" property="settings.json" typeHandler="org.opensrp.repository.postgres.handler.SettingTypeHandler" />
		<collection column="settings_id" javaType="ArrayList" ofType="org.opensrp.domain.postgres.SettingsMetadata" property="settingsMetadata">
			<result column="settings_metadata_id" jdbcType="BIGINT" property="id" />
			<result column="settings_id" jdbcType="BIGINT" property="settingsId" />
			<result column="document_id" jdbcType="VARCHAR" property="documentId" />
			<result column="identifier" jdbcType="VARCHAR" property="identifier" />
			<result column="server_version" jdbcType="BIGINT" property="serverVersion" />
			<result column="team" jdbcType="VARCHAR" property="team" />
			<result column="team_id" jdbcType="VARCHAR" property="teamId" />
			<result column="provider_id" jdbcType="VARCHAR" property="providerId" />
			<result column="location_id" jdbcType="VARCHAR" property="locationId" />
			<result column="uuid" jdbcType="VARCHAR" property="uuid" />
			<result column="settings_metadata_configuration_json" jdbcType="OTHER" property="json" typeHandler="org.opensrp.repository.postgres.handler.SettingMetadataTypeHandler" />
			<result column="setting_type" jdbcType="VARCHAR" property="settingType" />
			<result column="setting_value" jdbcType="VARCHAR" property="settingValue" />
			<result column="setting_key" jdbcType="VARCHAR" property="settingKey" />
			<result column="setting_description" jdbcType="VARCHAR" property="settingDescription" />
			<result column="inherited_from" jdbcType="VARCHAR" property="inheritedFrom" />
		</collection>
	</resultMap>

	<sql id="Base_Column_List">
		s.json as settings_configuration_json, sm.id as settings_metadata_id, sm.json as settings_metadata_configuration_json, sm.*
	</sql>

	<sql id="Base_Table_List">
		FROM core.settings_metadata sm
		JOIN core.settings s ON
		sm.settings_id = s.id
	</sql>

	<select id="selectByDocumentId" parameterType="java.lang.String"
			resultType="org.opensrp.domain.postgres.SettingsAndSettingsMetadataJoined">
		select
		<include refid="Base_Column_List" />
		<include refid="Base_Table_List" />

		where sm.document_id = #{documentId,jdbcType=VARCHAR}
	</select>

	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>

	<insert id="insertMany" parameterType="java.util.List">
		INSERT INTO core.settings_metadata (
			id,
			settings_id,
			document_id,
			identifier,
			server_version,
			team, team_id,
			provider_id,
			location_id
		) VALUES
		<foreach collection="settingsMetadata" item="setting" index="index" open="(" separator="),("  close=")">
			#{setting.id},
			#{setting.settingsId},
			#{setting.documentId},
			#{setting.identifier},
			#{setting.serverVersion},
			#{setting.team},
			#{setting.teamId},
			#{setting.providerId},
			#{setting.locationId},
		</foreach>
	</insert>

	<update id="updateMany" parameterType="java.util.List">
		<foreach collection="settingsMetadata" item="setting" index="index" separator=";">
			UPDATE core.settings_metadata SET
				identifier = #{setting.identifier},
				server_version = #{setting.serverVersion},
				team = #{setting.team},
				team_id = #{setting.teamId},
				provider_id = #{setting.providerId},
				location_id = #{setting.locationId}
			WHERE settings_id = #{setting.settingsId}
			AND setting_key = #{setting.settingKey}
		</foreach>
	</update>

	<select id="selectMany" resultMap="SettingsAndSettingsMetadataMap">
		SELECT

		<if test="example.distinct">
			distinct
		</if>

		<include refid="Base_Column_List" />
		<include refid="Base_Table_List" />

		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>

		<if test="example.orderByClause != null">
			order by ${example.orderByClause}
		</if>

		LIMIT #{limit} OFFSET #{offset}
	</select>

</mapper>
